Exercise 2: Implementing Dependency Injection



1. Modify the XML Configuration:
    - Updating `applicationContext.xml` to wire `BookRepository` into `BookService`.
    
    ```xml
    <bean id="bookService" class="com.library.service.BookService">
        <property name="bookRepository" ref="bookRepository"/>
    </bean>
    ```

2. Updating the BookService Class:
    
    ```java
    package com.library.service;

    import com.library.repository.BookRepository;

    public class BookService {
        private BookRepository bookRepository;

        public void setBookRepository(BookRepository bookRepository) {
            this.bookRepository = bookRepository;
        }

        // Service methods
    }
   

3. Testing the Configuration:
    - Run the `LibraryManagementApplication` main class to verify the dependency injection.
 package com.library;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import com.library.service.BookService;

public class LibraryManagementApplication {
    public static void main(String[] args) {
        
        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");

        
        BookService bookService = (BookService) context.getBean("bookService");

        
        bookService.manageBooks();
    }
}
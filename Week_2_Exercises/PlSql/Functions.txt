 Exercise 4: Functions

*Scenario 1: Calculate the age of customers for eligibility checks.*
sql
CREATE OR REPLACE FUNCTION CalculateAge(p_dob IN DATE) RETURN NUMBER IS
    v_age NUMBER;
BEGIN
    v_age := FLOOR((SYSDATE - p_dob) / 365.25);
    RETURN v_age;
END;
/


*Scenario 2: Compute the monthly installment for a loan.*
sql
CREATE OR REPLACE FUNCTION CalculateMonthlyInstallment(p_loan_amount IN NUMBER, p_interest_rate IN NUMBER, p_duration_years IN NUMBER) RETURN NUMBER IS
    v_monthly_rate NUMBER;
    v_installment NUMBER;
BEGIN
    v_monthly_rate := p_interest_rate / 12 / 100;
    v_installment := p_loan_amount * v_monthly_rate / (1 - POWER(1 + v_monthly_rate, -p_duration_years * 12));
    RETURN v_installment;
END;
/


*Scenario 3: Check if a customer has sufficient balance before making a transaction.*
sql
CREATE OR REPLACE FUNCTION HasSufficientBalance(p_accountID IN NUMBER, p_amount IN NUMBER) RETURN BOOLEAN IS
    v_balance NUMBER;
BEGIN
    SELECT Balance INTO v_balance FROM Accounts WHERE AccountID = p_accountID;
    IF v_balance >= p_amount THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
END;
/

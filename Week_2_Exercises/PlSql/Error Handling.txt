 Exercise 2: Error Handling

*Scenario 1: Handle exceptions during fund transfers between accounts.*
sql
CREATE OR REPLACE PROCEDURE SafeTransferFunds(p_sourceID IN NUMBER, p_destID IN NUMBER, p_amount IN NUMBER) IS
    e_insufficient_funds EXCEPTION;
    v_balance NUMBER;
BEGIN
    SELECT Balance INTO v_balance FROM Accounts WHERE AccountID = p_sourceID FOR UPDATE;
    IF v_balance < p_amount THEN
        RAISE e_insufficient_funds;
    ELSE
        UPDATE Accounts SET Balance = Balance - p_amount WHERE AccountID = p_sourceID;
        UPDATE Accounts SET Balance = Balance + p_amount WHERE AccountID = p_destID;
    END IF;
    COMMIT;
EXCEPTION
    WHEN e_insufficient_funds THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: Insufficient funds.');
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
/


*Scenario 2: Manage errors when updating employee salaries.*
sql
CREATE OR REPLACE PROCEDURE UpdateSalary(p_employeeID IN NUMBER, p_percentage IN NUMBER) IS
    e_no_employee EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_no_employee, -01403);
BEGIN
    UPDATE Employees
    SET Salary = Salary * (1 + p_percentage / 100)
    WHERE EmployeeID = p_employeeID;
    IF SQL%NOTFOUND THEN
        RAISE e_no_employee;
    END IF;
    COMMIT;
EXCEPTION
    WHEN e_no_employee THEN
        DBMS_OUTPUT.PUT_LINE('Error: Employee ID ' || p_employeeID || ' does not exist.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
/


*Scenario 3: Ensure data integrity when adding a new customer.*
sql
CREATE OR REPLACE PROCEDURE AddNewCustomer(p_customerID IN NUMBER, p_name IN VARCHAR2, p_dob IN DATE, p_balance IN NUMBER) IS
    e_duplicate_customer EXCEPTION;
    PRAGMA EXCEPTION_INIT(e_duplicate_customer, -00001);
BEGIN
    INSERT INTO Customers (CustomerID, Name, DOB, Balance, LastModified)
    VALUES (p_customerID, p_name, p_dob, p_balance, SYSDATE);
    COMMIT;
EXCEPTION
    WHEN e_duplicate_customer THEN
        DBMS_OUTPUT.PUT_LINE('Error: Customer ID ' || p_customerID || ' already exists.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
/
